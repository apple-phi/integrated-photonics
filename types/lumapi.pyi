from _typeshed import Incomplete
from collections.abc import Generator
from contextlib import contextmanager
from ctypes import Structure, Union

INTEROPLIBDIR: Incomplete
INTEROPLIB_FILENAME: str
INTEROPLIB: str
ENVIRONPATH: str
REMOTE_MODULE_ON: bool

def initLibraryEnv(remoteArgs) -> None: ...
@contextmanager
def environ(env) -> Generator[None]: ...

class Session(Structure): ...

class LumApiSession:
    iapi: Incomplete
    handle: Incomplete
    __doc__: str
    def __init__(self, iapiArg, handleArg) -> None: ...

class LumString(Structure): ...
class LumMat(Structure): ...
class LumNameValuePair(Structure): ...
class LumStruct(Structure): ...
class LumList(Structure): ...
class ValUnion(Union): ...
class Any(Structure): ...

def lumWarning(message) -> None: ...
def initLib(remoteArgs): ...

class LumApiError(Exception):
    value: Incomplete
    def __init__(self, value) -> None: ...

def verifyConnection(handle): ...
biopen = open

def extractsHostnameAndPort(remoteArgs): ...
def open(product, key: Incomplete | None = None, hide: bool = False, serverArgs={}, remoteArgs={}): ...
def close(handle) -> None: ...
def evalScript(handle, code, verifyConn: bool = False) -> None: ...
def getVar(handle, varname, verifyConn: bool = False): ...
def putString(handle, varname, value, verifyConn: bool = False) -> None: ...
def putMatrix(handle, varname, value, verifyConn: bool = False) -> None: ...
def putDouble(handle, varname, value, verifyConn: bool = False) -> None: ...
def putStruct(handle, varname, values, verifyConn: bool = False) -> None: ...
def putList(handle, varname, values, verifyConn: bool = False) -> None: ...
def packMatrix(handle, value): ...
def unpackMatrix(handle, value): ...
def isIntType(value): ...

class MatrixDatasetTranslator:
    @staticmethod
    def applyConventionToStruct(d) -> None: ...
    @staticmethod
    def createStructMemberPreTranslators(d): ...

class PointDatasetTranslator:
    @staticmethod
    def applyConventionToStruct(d, geometryShape, paramShape, removeScalarDim) -> None: ...
    @staticmethod
    def createStructMemberPreTranslators(d, numGeomDims): ...

class RectilinearDatasetTranslator:
    @staticmethod
    def applyConventionToStruct(d) -> None: ...
    @staticmethod
    def createStructMemberPreTranslators(d): ...

class UnstructuredDatasetTranslator:
    @staticmethod
    def applyConventionToStruct(d) -> None: ...
    @staticmethod
    def createStructMemberPreTranslators(d): ...

class PutTranslator:
    @staticmethod
    def translateStruct(handle, value): ...
    @staticmethod
    def translateList(handle, values): ...
    @staticmethod
    def translate(handle, value): ...
    @staticmethod
    def createStructMemberPreTranslators(value): ...
    @staticmethod
    def putStructMembers(handle, value): ...
    @staticmethod
    def putListMembers(handle, value): ...

class GetTranslator:
    @staticmethod
    def translateString(strVal): ...
    @staticmethod
    def recalculateSize(size, elements): ...
    @staticmethod
    def translate(handle, d, element): ...
    @staticmethod
    def applyLumDatasetConventions(d) -> None: ...
    @staticmethod
    def getStructMembers(handle, value): ...
    @staticmethod
    def getListMembers(handle, value): ...

def removePromptLineNo(strval): ...
def appCallWithConstructor(self, funcName, *args, **kwargs): ...
def appCall(self, name, *args): ...
def lumTypes(argList): ...

class SimObjectResults:
    def __init__(self, parent) -> None: ...
    def __dir__(self): ...
    def __getitem__(self, name): ...
    def __getattr__(self, name): ...
    def __setattr__(self, name, value): ...

class GetSetHelper(dict):
    def __init__(self, owner, name, **kwargs) -> None: ...
    def __getitem__(self, key): ...
    def __setitem__(self, key, val) -> None: ...
    def __getattr__(self, key): ...
    def __setattr__(self, key, val): ...

class SimObjectId:
    name: Incomplete
    index: Incomplete
    def __init__(self, id) -> None: ...

class SimObject:
    results: Incomplete
    def __init__(self, parent, id) -> None: ...
    def build_nested(self, properties): ...
    def __dir__(self): ...
    def __getitem__(self, key): ...
    def __setitem__(self, key, item) -> None: ...
    def __getattr__(self, name): ...
    def __setattr__(self, name, value): ...
    def getParent(self): ...
    def getChildren(self): ...

class Lumerical:
    keepCADOpened: Incomplete
    handle: Incomplete
    syncUserFunctionsFlag: bool
    userFunctions: Incomplete
    def __init__(self, product, filename, key, hide, serverArgs, remoteArgs, **kwargs) -> None: ...
    def __extractKeepCADOpenedArgument__(self, serverArgs): ...
    def __del__(self) -> None: ...
    def __enter__(self): ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...
    def __getattr__(self, name): ...
    def __open__(self, iapi, product, key: Incomplete | None = None, hide: bool = False, serverArgs={}, remoteArgs={}): ...
    def close(self) -> None: ...
    def eval(self, code) -> None: ...
    def getv(self, varname): ...
    def putv(self, varname, value) -> None: ...
    def getObjectById(self, id): ...
    def getObjectBySelection(self): ...
    def getAllSelectedObjects(self): ...

class INTERCONNECT(Lumerical):
    def __init__(self, filename: Incomplete | None = None, key: Incomplete | None = None, hide: bool = False, serverArgs={}, remoteArgs={}, **kwargs) -> None: ...

class DEVICE(Lumerical):
    def __init__(self, filename: Incomplete | None = None, key: Incomplete | None = None, hide: bool = False, serverArgs={}, remoteArgs={}, **kwargs) -> None: ...

class FDTD(Lumerical):
    def __init__(self, filename: Incomplete | None = None, key: Incomplete | None = None, hide: bool = False, serverArgs={}, remoteArgs={}, **kwargs) -> None: ...

class MODE(Lumerical):
    def __init__(self, filename: Incomplete | None = None, key: Incomplete | None = None, hide: bool = False, serverArgs={}, remoteArgs={}, **kwargs) -> None: ...
