from _typeshed import Incomplete

mpirun: str
mpilib: Incomplete
fdtd_engine: str
fdtd_gui: str
pythonpath: str
python: str
config_files: Incomplete
config: Incomplete

def fdtd_memory_estimate(filename): ...
def partition_info(): ...
def suggest_partitions(fsp_file): ...
def slurm_license_exists(feature): ...
def sbatch(command, partition: Incomplete | None = None, nodes: int = 1, ntasks_per_node: Incomplete | None = None, cpus_per_task: Incomplete | None = None, gpus_per_node: Incomplete | None = None, dependency: Incomplete | None = None, licenses: Incomplete | None = None, name: Incomplete | None = None, block: bool = False): ...
def run_solve(fsp_file, partition: str = 'auto', nodes: int = 1, processes_per_node: str = 'auto', threads_per_process: str = 'auto', gpus_per_node: str = 'auto', block: bool = False): ...
def run_lum_script(script_file, fsp_file: Incomplete | None = None, partition: Incomplete | None = None, threads: str = 'auto', dependency: Incomplete | None = None, job_name: Incomplete | None = None, block: bool = False): ...
def run_py_script(py_file, data_file: Incomplete | None = None, partition: Incomplete | None = None, threads: str = 'auto', dependency: Incomplete | None = None, job_name: Incomplete | None = None, args=[], block: bool = False): ...
def run_py_code(py_code, fsp_file: Incomplete | None = None, partition: Incomplete | None = None, threads: str = 'auto', dependency: Incomplete | None = None, job_name: Incomplete | None = None, block: bool = False): ...
def run_script(script_file: Incomplete | None = None, script_code: Incomplete | None = None, fsp_file: Incomplete | None = None, partition: Incomplete | None = None, threads: str = 'auto', dependency: Incomplete | None = None, job_name: Incomplete | None = None, block: bool = False): ...
def run_solve_and_script(fsp_file, script_file: Incomplete | None = None, script_code: Incomplete | None = None, solve_partition: str = 'auto', solve_nodes: int = 1, solve_processes_per_node: str = 'auto', solve_threads_per_process: str = 'auto', solve_gpus_per_node: Incomplete | None = None, script_partition: Incomplete | None = None, script_threads: str = 'auto', job_name: Incomplete | None = None, block: bool = False): ...
def run_batch(fsp_file_pattern, postprocess_script: Incomplete | None = None, postprocess_code: Incomplete | None = None, collect_script: Incomplete | None = None, collect_code: Incomplete | None = None, solve_partition: str = 'auto', solve_nodes: int = 1, solve_processes_per_node: str = 'auto', solve_threads_per_process: str = 'auto', solve_gpus_per_node: Incomplete | None = None, script_partition: Incomplete | None = None, script_threads: str = 'auto', job_name: Incomplete | None = None, block: bool = True): ...
def compute_results(fsp_file, sweep_name, threads) -> None: ...
def load_sweep(fsp_file, sweep_name, threads) -> None: ...
def run_sweep(fsp_file, sweep_name, solve_partition: str = 'auto', solve_nodes: int = 1, solve_processes_per_node: str = 'auto', solve_threads_per_process: str = 'auto', solve_gpus_per_node: Incomplete | None = None, script_partition: Incomplete | None = None, script_threads: str = 'auto', block: bool = True): ...
def launch_notebook_server(partition: Incomplete | None = None, threads: str = 'auto') -> None: ...
