from _typeshed import Incomplete

MAJOR_RELEASE: str
MODERN_LUMLDIR: Incomplete
FDTD_ROOT = MODERN_LUMLDIR
MODE_ROOT = MODERN_LUMLDIR
DEVICE_ROOT = MODERN_LUMLDIR
FDTD_BIN: Incomplete
MODE_BIN: Incomplete
DEVICE_BIN: Incomplete
FDTD_CAD: Incomplete
MODE_CAD: Incomplete
DAVICE_CAD: Incomplete
FDTD_INI: Incomplete
MODE_INI: Incomplete
DEVICE_INI: Incomplete

class Timer:
    start: Incomplete
    def __enter__(self): ...
    end: Incomplete
    interval: Incomplete
    def __exit__(self, *args) -> None: ...

class VpcConfigurationError(Exception): ...

def configure_logging(log_level=...) -> None: ...
def create_virtual_private_cloud(name, own_ip: str = '0.0.0.0/0'): ...
def set_individual_parameter(param_name, param_value): ...
def initialize_virtual_private_cloud(name, license_file, ami_id, lic_ami_id, key_pair_name: Incomplete | None = None) -> None: ...
def start_license_server(name): ...
def stop_license_server(name): ...
def license_server_status(name) -> None: ...
def update_license_file(name, license_file_local_path) -> None: ...
def configure_compute_instance(name, instance_type: Incomplete | None = None, max_storage_in_gb: int = 60) -> None: ...
def start_compute_instances(name, num_instances, vnc_password: Incomplete | None = None): ...
def terminate_all_instances(name) -> None: ...
def compute_instance_status(name) -> None: ...
def run_parameter_sweep(name, workgroup_id, s3_uri, sweep_name: Incomplete | None = None, terminate_instances: bool = True, wait: bool = False) -> None: ...
def kill_job(name, workgroup_id) -> None: ...
def stop_job(name, workgroup_id) -> None: ...
def remove_virtual_private_cloud(name, force: bool = False) -> None: ...
